# Do not Edit! Generated by:
# gbs_conf_generator 
# 
%define _repository xwayland
#

Patterntype: rpm-md comps
Release: <CI_CNT>.<B_CNT>
Support: build 
Support: build-compare build-mkbaselibs
Support: rpmlint-mini rpmlint-tizen


FileProvides: /usr/sbin/groupadd pwdutils
Prefer: util-linux
Prefer: nfc-manager
Prefer: nfc-manager-devel
Prefer: nfc-common-lib-devel
Prefer: nfc-common-lib
Prefer: nfc-client-lib
Prefer: nfc-client-lib-devel
Prefer: libtapi-devel

#| wayland |  x  | meaning
#|---------------------------
#|   0     |  1  | pure X11 platform(no wayland)
#|   1     |  0  | pure wayland platform (no X11)
#|   1     |  1  | wayland but X compatibility
#|   0     |  0  | no X and no wayland

%if "%_repository" == "ia32-wayland" || "%_repository" == "x86_64-wayland" || "%_repository" == "wayland" || "%_repository" == "standard" 
%define _with_wayland 1
Macros:
%_with_wayland 1
:Macros
%endif

%if "%_repository" == "ia32-x11" || "%_repository" == "x86_64-x11" || "%_repository" == "x11"
%define _with_x 1
Macros:
%_with_x 1
:Macros
%endif

%if "%_repository" == "ia32-xwayland" || "%_repository" == "x86_64-xwayland" || "%_repository" == "xwayland"
%define _with_wayland 1
%define _with_x 1
Macros:
%_with_wayland 1
%_with_x 1
:Macros
%endif


%define _with_tizen 1
%define _with_mesa 1
%define gcc_version 48
%define profile generic

# mesa
Substitute: pkgconfig(gles20) pkgconfig(egl) pkgconfig(glesv2) pkgconfig(gl)
Substitute: pkgconfig(gles11) pkgconfig(egl) pkgconfig(glesv1_cm) pkgconfig(gl) 


%ifarch i586
Target: i686-tizen-linux
%endif

%ifarch armv7hl
Target: armv7hl-tizen-linux
%endif

%ifarch armv7l
Target: armv7l-tizen-linux
%endif

%ifarch %arm armv7l
Hostarch: x86_64
# cross build support for the build hosts
Preinstall: qemu-linux-user
Keep: qemu-linux-user
%endif

%ifarch armv7hl 
Preinstall: qemu-accel-armv7hl
Runscripts: qemu-accel-armv7hl
Preinstall: util-linux libmount libblkid libuuid
%endif
%ifarch armv7l 
Preinstall: qemu-accel-armv7l
Runscripts: qemu-accel-armv7l
Preinstall: util-linux libmount libblkid libuuid
%endif
%ifarch armv7el
Preinstall: qemu-accel-armv7el
Runscripts: qemu-accel-armv7el
Preinstall: util-linux libmount libblkid libuuid
%endif

ExportFilter: ^qemu-linux-user.*\.x86_64\.rpm$ . armv7el armv7l armv7hl

ExportFilter: ^qemu-accel-armv7hl.*\.x86_64\.rpm$ .  armv7hl
ExportFilter: ^qemu-accel-armv7l.*\.x86_64\.rpm$ .  armv7l
ExportFilter: ^qemu-accel-armv7el.*\.x86_64\.rpm$ .  armv7el
ExportFilter: \.x86_64\.rpm$ x86_64


Preinstall: setup filesystem
RunScripts: setup

Preinstall: bash bzip2 coreutils diffutils grep rpm
Preinstall: glibc libacl libattr
Preinstall: libcap
Preinstall: libgcc_s1
Preinstall: libpopt sed tar zlib
Preinstall: libncurses libreadline
Preinstall: libelf libbz2
Preinstall: liblzma
Preinstall: nss nspr libfreebl3 libsoftokn3
Preinstall: libmagic
Preinstall: liblua
Preinstall: smack libsmack libxml2 libmagic  libmagic-data
Preinstall: libsqlite
Preinstall: rpm-security-plugin

VMinstall: perl libmount libblkid libext2fs libuuid  grep libpcre util-linux  

Required: binutils gcc glibc rpm-build libtool

Support: glibc-locale
Support: perl
Support: hostname
Support: cpio findutils
Support: file findutils zlib bzip2 
Support: gzip hostname net-tools
Support: make  patch sed  gawk tar grep coreutils pkg-config  
Support: m4  tzdata 
Support: util-linux
Support: less
Support: which  elfutils
Support: update-alternatives
 
# TO REMOVE
Support: gcc-c++

Keep: cpp%{gcc_version} gcc%{gcc_version} gcc%{gcc_version}-ada libstdc++%{gcc_version}
Keep: libstdc++%{gcc_version}-devel gcc%{gcc_version}-c++
Keep: cpp gcc libstdc++
Keep: pam
Keep: binutils cpp  libmagic-data file findutils gawk gcc  gcc-c++
Keep: gdbm gzip libada libunwind  glibc-devel libpcre xz-lzma-compat 
Keep: make  gmp libcap groff cpio
Keep: patch rpm-build  nss nspr elfutils python grep libgcc gcc-c++ 
Keep: kernel-headers  perl-libs perl
Keep: pkgconfig glib2 tizen-rpm-config
Keep: libmpc libmpfr libppl libgmp libppl_c
Keep: libcloog libppl libgmpxx
Keep: nss-softokn-freebl libmagic libmagic-data
Keep: setup
Keep: update-alternatives
Prefer: libstdc++%{gcc_version} libgcc%{gcc_version}
Prefer: libstdc++%{gcc_version}-32bit libstdc++%{gcc_version}-64bit

Substitute: gettext gettext-tools


%ifarch x86_64 
Substitute: glibc-devel-32bit glibc-devel-32bit glibc-32bit
%else
Substitute: glibc-devel-32bit
%endif


#%__global_cflags -O2 -g2 -feliminate-unused-debug-types -pipe -Wall  -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector  --param=ssp-buffer-size=32 -Wformat -Wformat-security  

Optflags: x86_64 -O2 -g2 -feliminate-unused-debug-types -pipe -Wall  -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector  --param=ssp-buffer-size=32 -Wformat -Wformat-security -fmessage-length=0 -m64 -march=corei7 -msse4.2  -mtune=corei7-avx -mfpmath=sse -fasynchronous-unwind-tables -fno-omit-frame-pointer  -fipa-cp-clone

Optflags: armv7l -O2 -g2 -feliminate-unused-debug-types -pipe -Wall  -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector  --param=ssp-buffer-size=32 -Wformat -Wformat-security -fmessage-length=0 -march=armv7-a -mtune=cortex-a8 -mlittle-endian  -mfpu=vfpv3 -mfloat-abi=softfp -D__SOFTFP__

Macros:

%profile generic

%_with_tizen 1
%_with_mesa 1
%check exit 0
%run_check_section 0
%opensuse_bs 1
%_default_patch_fuzz   2

%tizen_version 3.0
%tizen 3.0

%vendor tizen
%_vendor tizen

